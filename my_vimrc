set termencoding=&encoding
set fileencodings=utf-8,gbk

"set fileencodings=gb2312,gb18030,utf-8
"set termencoding=utf-8
"set encoding=prc 

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
" alternatively, pass a path where Vundle should install plugins
" let path = '~/some/path/here'
" call vundle#rc(path)

" let Vundle manage Vundle, required
Plugin 'gmarik/vundle'

"接下来是要安装的插件
""格式1：Github上其他用户的仓库（非vim-scripts账户里的仓库，所以要加Github用户名）
"Plugin 'tpope/vim-fugitive'
"Plugin 'tpope/vim-rails.git'
"格式2：vim-scripts里面的仓库，直接打仓库名即可。
Plugin 'scrooloose/nerdtree'
Plugin 'a.vim'
Plugin 'Tagbar'
Plugin 'fholgado/minibufexpl.vim'
Plugin 'OmniCppComplete'
Plugin 'mbbill/echofunc'
Plugin 'kien/ctrlp.vim'
Plugin 'grep.vim'
Plugin 'tomasr/molokai'
Plugin 'ervandew/supertab'
Plugin 'bling/vim-airline'
Plugin 'terryma/vim-multiple-cursors'

"格式3：非Github的Git仓库
"Plugin 'git://vim-latex.git.sourceforge.net/gitroot/vim-latex/vim-latex'

"最后在所有Plugin命令后面加上文件类型检测：
filetype plugin indent on

" ctags
nmap ct :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>

" cscope
" cscope -Rbq [-f path/xxx.out] build the database
nmap ca :cs add cscope.out .<CR>
:set cscopequickfix=s-,c-,d-,i-,t-,e-

" MiniBufExplorer
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1
let g:miniBufExplMoreThanOne=0

" NERDTree
let g:NERDTree_title="[NERDTree]"
let NERDTreeQuitOnOpen=1 "打开文件时关闭树
let NERDTreeShowBookmarks=1 "显示书签
let NERDTreeChDirMode=2  "选中root即设置为当前目录
let NERDTreeQuitOnOpen=1 "打开文件时关闭树
let NERDTreeMinimalUI=1 "不显示帮助面板
let NERDTreeDirArrows=0 "目录箭头 1 显示箭头  0传统+-|号

function! NERDTree_Start()
    exec 'NERDTree'
endfunction
     
function! NERDTree_IsValid()
    return 1
endfunction

nmap nt :NERDTreeToggle<CR>

" OmniCppComplete
set nocp
filetype plugin on

" (选择颜色主题为 molokai , 就是 ~/.vim/colors/molokai.vim文件)
colo molokai   
" color scheme (双引号开头的行表示注释)
"  (设置终端支持的颜色是256颜色，这句特别重要，谨记)
set t_Co=256
" hilight function name
" (上面两行为了匹配函数名的，为下面的给函数名定义颜色做准备)
autocmd BufNewFile,BufRead * :syntax match cfunctions "\<[a-zA-Z_][a-zA-Z_0-9]*\>[^()]*)("me=e-2
autocmd BufNewFile,BufRead * :syntax match cfunctions "\<[a-zA-Z_][a-zA-Z_0-9]*\>\s*("me=e-1
" (这一行就是给函数名加颜色的)
hi cfunctions ctermfg=81

" (设置光标行，效果相当棒，光标移到哪一行，哪一行的行号就变成了浅黄色，相当的动感)
set cursorline


" a.vim
let g:alternateExtensions_cc = "h"
let g:alternateExtensions_h = "c"
let g:alternateExtensions_h = "C"
let g:alternateExtensions_C = "h"
let g:alternateExtensions_h = "cpp"
let g:alternateExtensions_cpp = "h"

" fold
set foldmethod=syntax
set foldlevel=100  " 启动 vim 时不要自动折叠代码

" Tagbar
autocmd BufReadPost *.cpp,*.c,*.h,*.hpp,*.cc,*.cxx,*.C call tagbar#OpenWindow() 
let g:tagbar_width = 30
nmap tb :TagbarToggle<CR>

" mouse
" :set mouse=a

" grep
let Grep_Default_Filelist = '*.c *.cpp *.cc *.C *.h *.hpp *.asm'
let Grep_Skip_Files = '*.bak *~ tags .out'

" superTab
let g:SuperTabDefaultCompletionType = "<c-n>"

" tab 
:set softtabstop=4
" :set tabstop=4
:set expandtab
autocmd FileType make set noexpandtab

" airline
set t_Co=256
set laststatus=2
let g:airline#extensions#whitespace#enabled = 0

noremap <C-Right> :bn<CR>
noremap <C-Left> :bp<CR>
map <C-j> <C-w>j <CR>
map <C-k> <C-w>k <CR>
map <C-h> <C-w>h <CR>
map <C-l> <C-w>l <CR>
